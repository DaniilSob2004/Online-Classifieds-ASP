@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject CurrentUserProvider CurrentUserProvider
@inject IHtmlLocalizer<OnlineClassifieds.SharedResources.MainTemplateResource> Localizer

@{
    var user = await CurrentUserProvider.GetCurrentUser();
    string textUserHello = $"{(user is null ? "" : $"{user.FullName}")}";
}

@if (SignInManager.IsSignedIn(User))
{
    <li class="header__shipping--text text-white">
        <span>@Localizer["HelloUser_Text"]@(textUserHello != "" ? ", " : "") @textUserHello</span>
    </li>
    <li class="header__shipping--text text-white">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Announcement", new { area = "" })">
            <button id="logout" type="submit" class="header__shipping--text text-white button-reset">@Localizer["Logout_Text"]</button>
        </form>
    </li>
}
else
{
    <li class="header__shipping--text text-white">
        <a style="color: white; text-decoration: none;" id="register" asp-area="Identity" asp-page="/Account/Register">@Localizer["Register_Text"]</a>
    </li>
    <li class="header__shipping--text text-white">
        <a style="color: white; text-decoration: none;" id="login" asp-area="Identity" asp-page="/Account/Login">@Localizer["Login_Text"]</a>
    </li>
}
